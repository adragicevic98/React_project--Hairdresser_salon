[{"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\Rezervacija.js":"3","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\DateCalendar.js":"4","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\Dropdown.js":"5","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\Tretman.js":"6","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\LoginForma.js":"7","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\RegistracijaForma.js":"8","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\services\\korisnici.js":"9","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\services\\rezervacije.js":"10","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\services\\login.js":"11","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\ProfilForma.js":"12","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\EditForma.js":"13","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\RezervacijaKor.js":"14"},{"size":144,"mtime":1613380952162,"results":"15","hashOfConfig":"16"},{"size":18666,"mtime":1613465021319,"results":"17","hashOfConfig":"16"},{"size":906,"mtime":1612981960881,"results":"18","hashOfConfig":"16"},{"size":746,"mtime":1613427276353,"results":"19","hashOfConfig":"16"},{"size":320,"mtime":1612862330114,"results":"20","hashOfConfig":"16"},{"size":653,"mtime":1613432784971,"results":"21","hashOfConfig":"16"},{"size":796,"mtime":1613341746044,"results":"22","hashOfConfig":"16"},{"size":1796,"mtime":1613341906438,"results":"23","hashOfConfig":"16"},{"size":532,"mtime":1612462574319,"results":"24","hashOfConfig":"16"},{"size":760,"mtime":1612903244497,"results":"25","hashOfConfig":"16"},{"size":228,"mtime":1612567750412,"results":"26","hashOfConfig":"16"},{"size":730,"mtime":1613341848604,"results":"27","hashOfConfig":"16"},{"size":1912,"mtime":1613429167188,"results":"28","hashOfConfig":"16"},{"size":599,"mtime":1613429612965,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"izhpf9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\index.js",[],["68","69"],"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\App.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"import React,{useState,useEffect} from 'react';\r\nimport Rezervacija from './components/Rezervacija'\r\nimport RezervacijaKor from './components/RezervacijaKor'\r\nimport DateCalendar from './components/DateCalendar'\r\nimport Dropdown from './components/Dropdown';\r\nimport moment from 'moment'\r\nimport Tretman from './components/Tretman'\r\nimport rezervacijeServer from './services/rezervacije'\r\nimport korisniciServer from './services/korisnici'\r\nimport prijavaMetode from './services/login'\r\nimport LoginForma from './components/LoginForma'\r\nimport RegistracijaForma from './components/RegistracijaForma'\r\nimport ProfilForma from './components/ProfilForma'\r\nimport EditForma from './components/EditForma'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Alert } from '@material-ui/lab'\r\nimport './App.css'\r\nimport {Container,Button} from '@material-ui/core'\r\n\r\n\r\nconst App = (props) => {\r\n    const [rezervacije,postaviRezervacije]=useState([])\r\n    const [korisnici,postaviKorisnike]=useState([])\r\n    const [odabirDatuma,postaviDatum]=useState(new Date())\r\n    const [odabirPocetka,postaviPocetak]=useState('');\r\n    const [odabirKraja,postaviKraj]=useState('');\r\n    const [odabirTretmana,postaviTretman]=useState('haircut');\r\n    const [username, postaviUsername] = useState('')\r\n    const [pass, postaviPass] = useState('')\r\n    const [pass1,postaviPass1]=useState('')\r\n    const [korisnik, postaviKorisnika] = useState(null)\r\n    const [loginVidljiv, postaviLoginVidljivost] = useState(false)\r\n    const [registracijaVidljiva,postaviRegistracijaVidljivost]=useState(false)\r\n    const [pocetnaVidljiva,postaviPocetnaVidljivost]=useState(true)\r\n    const [editVidljiv,postaviEditVidljivost]=useState(false)\r\n    const [ime, postaviIme] = useState('')\r\n    const [prezime, postaviPrezime] = useState('')\r\n    const [spol, postaviSpol] = useState('M')\r\n    const [mob, postaviMob] = useState('')\r\n    const [profilVidljiv,postaviProfilVidljiv]=useState(false)\r\n    const [info, postaviInfo] = useState(null)\r\n \r\n\r\n    const today=new Date();\r\n    const yesterday=new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    //console.log(Date.parse(today))\r\n    const userLogin = async (e) => {\r\n      e.preventDefault()\r\n      try{\r\n        const korisnik = await prijavaMetode.prijava({\r\n          username, pass\r\n        })\r\n        window.localStorage.setItem('prijavljeniKorisnik', JSON.stringify(korisnik))\r\n        rezervacijeServer.postaviToken(korisnik.token)\r\n        postaviKorisnika(korisnik)\r\n        postaviInfo(`Welcome ${korisnik.ime}`)\r\n        setTimeout(()=>{\r\n          postaviInfo(null)\r\n        },5000)\r\n        postaviUsername('')\r\n        postaviPass('')\r\n        postaviIme('')\r\n        postaviPrezime('')\r\n        postaviMob('')\r\n      } catch (exception){\r\n        alert('Invalid data! Try again!')\r\n      }\r\n    }\r\n    const userEdit = async(e)=>{\r\n      e.preventDefault()\r\n      if(pass==pass1){\r\n        const noviObjekt={\r\n          ...korisnik,\r\n          id:korisnik.id,\r\n          ime:ime,\r\n          prezime:prezime,\r\n          spol:spol,\r\n          mob:mob,\r\n          pass:pass\r\n        }  \t\r\n      //console.log(\"ID:\"+korisnik.id);\r\n      korisniciServer.osvjezi(korisnik.id,noviObjekt)\r\n      .then(response => {\r\n        postaviKorisnike(korisnici.map(k => k.id !== korisnik.id ? k : response.data))\r\n        postaviKorisnika(response.data);\r\n        rezervacijeServer\r\n        .dohvatiSve()    \r\n        .then(response => {\r\n          postaviRezervacije(response.data)\r\n        })//  alert(\"Successfully modified!\");\r\n          postaviEditVidljivost(false)\r\n      }).catch(err=>{\r\n      \r\n        if(err.message=== 'Request failed with status code 400')\r\n        {\r\n          alert(\"Exisiting username, please take another one!\"); \r\n        }\r\n       \r\n      });}else{\r\n        alert(\"Passwords don't match!\")\r\n      }\r\n}\r\n    \r\n    const userRegistration=(e)=>{\r\n      e.preventDefault()\r\n     if(pass==pass1){\r\n      const noviObjekt={\r\n        username:username,\r\n        ime:ime,\r\n        prezime:prezime,\r\n        spol:spol,\r\n        mob:mob,\r\n        pass:pass\r\n      }  \r\n    korisniciServer\r\n    .stvori(noviObjekt)\r\n    .then(response => {\r\n      postaviKorisnike(korisnici.concat(response.data))\r\n        postaviPocetnaVidljivost(false)\r\n        postaviRegistracijaVidljivost(false)\r\n        postaviLoginVidljivost(true)\r\n        postaviUsername('')\r\n        postaviPass('')\r\n        postaviIme('')\r\n        postaviPrezime('')\r\n        postaviMob('')\r\n    }) \r\n    .catch(err=>{\r\n      postaviRegistracijaVidljivost(true)\r\n      postaviPocetnaVidljivost(false)\r\n      postaviLoginVidljivost(false)\r\n      if(err.message=== 'Request failed with status code 400')\r\n      {\r\n       alert(\"Invalid data\"); \r\n       postaviRegistracijaVidljivost(true)\r\n       postaviPocetnaVidljivost(false)\r\n       postaviLoginVidljivost(false)\r\n       postaviUsername('')\r\n       postaviPass('')\r\n       postaviPass1('')\r\n       postaviIme('')\r\n       postaviPrezime('')\r\n       postaviMob('')\r\n      }\r\n    });\r\n     }else{\r\n       alert(\"Passwords don't match!\")\r\n     }\r\n    }\r\n    useEffect( () => {\r\n      const logiraniKorisnikJSON = window.localStorage.getItem('prijavljeniKorisnik')\r\n      if (logiraniKorisnikJSON) {\r\n        const korisnik = JSON.parse(logiraniKorisnikJSON)\r\n        postaviKorisnika(korisnik)\r\n        rezervacijeServer.postaviToken(korisnik.token)\r\n      }\r\n    }, [])\r\n   \r\n    const rezervacijeZaIspis= korisnik!=null\r\n    ?rezervacije.filter(rezervacija=> rezervacija.korisnik===korisnik.id || rezervacija.korisnik.username==korisnik.username && Date.parse(rezervacija.datum)>=Date.parse(yesterday)) \r\n    :rezervacije.filter(rezervacija=>rezervacija.datum>=yesterday.getDate())\r\n\r\n  useEffect(() => {\r\n    rezervacijeServer\r\n    .dohvatiSve()    \r\n    .then(response => {\r\n      postaviRezervacije(response.data)\r\n    })\r\n  }, [])\r\n    console.log(\"Renederirano\", rezervacije.length, 'rezervacija');\r\n  \r\n    const novaRezervacija=(e)=>{\r\n      e.preventDefault()\r\n\r\n      const noviObjekt={\r\n        datum:odabirDatuma,\r\n        pocetak:odabirPocetka,\r\n        kraj:odabirKraja,\r\n        tretman:odabirTretmana\r\n      }  \t\r\n      \r\n    rezervacijeServer\r\n    .stvori(noviObjekt)\r\n    .then(response => {\r\n      postaviRezervacije(rezervacije.concat(response.data));\r\n      //console.log(\"Odg servera:\",response.data);\r\n     //alert(\"Reservation successfully scheduled!\")\r\n    \r\n     postaviPocetak('');\r\n    }).catch(err=>{\r\n      if(err.message=== 'Request failed with status code 400')\r\n      {\r\n        alert(\"Time must be chosen!\"); \r\n      }\r\n    });}\r\n  const brisiRezervaciju =(id)=>{\r\n    rezervacijeServer\r\n    .brisi(id)\r\n    .then(response=>{\r\n      postaviRezervacije(rezervacije.filter(r=>r.id !==id))\r\n    })\r\n  }\r\n  const promjenaTretmana = (e) => {\r\n      postaviTretman(e.target.value)\r\n    }\r\n  const promjenaPocetka=(e)=>{\r\n       if(optionsTermin.length>0){\r\n        postaviKraj(parseInt(e.target.value)+1)\r\n        postaviPocetak(parseInt(e.target.value));}\r\n      else{\r\n       postaviPocetak(null);\r\n      }\r\n    }\r\n    \r\n  const promjenaDatuma = (e) =>{\r\n    postaviDatum(e.target.value)\r\n  }\r\n    var optionsTermin=[\r\n      {key:'25',text:\"Choose time!\"},\r\n      {key:'7',text:'07:00-08:00'},\r\n      {key:'8',text:'08:00-09:00'},\r\n      {key:'9',text:'09:00-10:00'},\r\n      {key:'10',text:'10:00-11:00'},\r\n      {key:'11',text:'11:00-12:00'}\r\n     ]\r\n    {if(korisnik!=null){\r\n      for (let index = 0; index < rezervacije.length; index++) {\r\n        const element = rezervacije[index];\r\n        if(Date.parse(element.datum)==odabirDatuma){\r\n          for (let i = 0; i <optionsTermin.length; i++) {\r\n            if(parseInt(element.pocetak)==parseInt(optionsTermin[i].key)){\r\n              optionsTermin=optionsTermin.filter(ot=>parseInt(ot.key)!=element.pocetak)\r\n              //console.log(\"termini\"+optionsTermin);\r\n            }\r\n          }\r\n      \r\n        }\r\n        //console.log(element.datum);\r\n        \r\n      }\r\n      var sat=0;\r\n      if(moment(odabirDatuma).format(\"YYYY-MM-DD\")==moment(today).format(\"YYYY-MM-DD\")){\r\n        if(parseInt(moment(odabirDatuma).format('mm'))>0){sat=parseInt(today.toString().slice(16,18))+1;}\r\n        optionsTermin=optionsTermin.filter(ot=>parseInt(ot.key)>=sat)\r\n       // console.log(\"Termin duzina:\"+optionsTermin.length);\r\n      }\r\n    }}\r\n   \r\n  \r\n    const odabraniDat = (d) => {\r\n      postaviDatum(Date.parse(d));\r\n      //console.log(\"Datum\",d);\r\n    }\r\n    const odabraniTretman = (tr) => {\r\n      postaviTretman(tr);\r\n      //console.log(\"Tretman\",tr);\r\n    }\r\n    const naslov1={\r\n      color:'black',\r\n      fontStyle: 'oblique',\r\n      textAlign:'center',     \r\n    }\r\n    const naslov2={\r\n      color:'#e6005c',\r\n      textAlign:'center',\r\n      fontWeight:'700',\r\n      fontSize:'60px',\r\n      fontFamily: \"Brush Script MT\"\r\n    }\r\n    const naslov3={\r\n      color:'#e6005c',\r\n      textAlign:'center',\r\n      fontWeight:'500',\r\n      fontSize:'50px',\r\n      fontFamily: \"Brush Script MT\"\r\n    }\r\n    const glavni={\r\n      textAlign:'center',\r\n    }\r\n    const naslov={\r\n      color:'#e6005c',\r\n      fontStyle: 'oblique',\r\n      textAlign:'center'\r\n    }\r\n    const odjavaStil={\r\n      marginRight:30,\r\n      float:'right'\r\n    }\r\n    const container={\r\n      display:'flex',\r\n      flexWrap:'wrap',\r\n      justifyContent:'space-evenly'\r\n    }\r\n  \r\n    const h3naslovi={\r\n     color:'black',\r\n     fontStyle:'bold',\r\n     fontFamily:'Papyrus',\r\n     fontWeight:'500'\r\n    }\r\n    const div1={\r\n      backgroundColor:'#ffe6ee',\r\n      padding:'20px',\r\n      margin:'10px'\r\n    }\r\n    const btnProfile={\r\n      marginLeft:'20px'\r\n    }\r\n    const div2={\r\n      padding:'20px',\r\n      margin:'10px'\r\n    }\r\n    const sredina={\r\n      backgroundColor:'#ffe6ee',\r\n      padding:'20px',\r\n      margin:'10px',\r\n     textAlign:'center'\r\n    }\r\n    const divProfil={\r\n      display:'flex',\r\n      flexWrap:'wrap',\r\n      justifyContent:'space-around',\r\n\r\n    }\r\n    const natrag={\r\n      marginLeft:'30px'\r\n    }\r\n    const pocetnaForma=()=>{\r\n      const sakrij = { display: pocetnaVidljiva ? 'none' : '' }\r\n      const prikazi = { display: pocetnaVidljiva? '' : 'none'}\r\n      return (\r\n        <Container style={glavni}>\r\n      <div style={prikazi}>\r\n        <h2 style={naslov1}>Hairdresser salon - online booking</h2>\r\n        <h1 style={naslov2}>\"Beauty\"</h1><br></br>\r\n        <p>Have an account?</p>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={() => {postaviLoginVidljivost(true); postaviRegistracijaVidljivost(false);postaviPocetnaVidljivost(false);}}>Sign In</Button>\r\n      <p>Don't have an account? Join us!</p>\r\n     <Button variant=\"contained\" color=\"secondary\" onClick={() => {postaviRegistracijaVidljivost(true); postaviLoginVidljivost(false);postaviPocetnaVidljivost(false);}}>Sign Up</Button>  <br></br>\r\n    <img src=\"BeautySalon.jpg\" width=\"500\" height=\"400\"></img>  \r\n      </div>\r\n      <div style={sakrij}>\r\n      </div>\r\n      </Container>)\r\n    }\r\n\r\n    const loginForma = () => {\r\n      const sakrij = { display: loginVidljiv ? 'none' : '' }\r\n     const prikazi = { display: loginVidljiv ? '' : 'none'}\r\n      return (\r\n        <div>\r\n           <div style={sakrij}> \r\n          </div>\r\n          <div style={prikazi}  className=\"promjenjiviSadrzaj\"> \r\n          <h1 style={naslov}>Sign In</h1>\r\n          <Button  startIcon={<ArrowBackIcon/>}  style ={natrag}variant=\"outlined\" color=\"secondary\" onClick={() =>{postaviLoginVidljivost(false); postaviRegistracijaVidljivost(false);postaviPocetnaVidljivost(true);}}>Back</Button>\r\n          <LoginForma\r\n      username={username}\r\n      pass={pass}\r\n      promjenaImena={({ target }) => postaviUsername(target.value)}\r\n      promjenaLozinke={({ target }) => postaviPass(target.value)}\r\n      userLogin={userLogin}\r\n    />\r\n          </div>\r\n      \r\n        </div>\r\n      )\r\n    }\r\n    const options=[ {key:'M',text:'M'},\r\n    {key:'F',text:'F'}]\r\n    const registracijaForma = () => {\r\n      const sakrij = { display: registracijaVidljiva? 'none' : '' }\r\n      const prikazi = { display: registracijaVidljiva ? '' : 'none' }\r\n     \r\n      return (\r\n        <div>\r\n          <div style={sakrij}>\r\n          </div>\r\n          <div style={prikazi}> \r\n          <h1 style={naslov}>Sign Up</h1>\r\n          <Button startIcon={<ArrowBackIcon/>}  style ={natrag} variant=\"outlined\" color=\"secondary\"onClick={() => {postaviRegistracijaVidljivost(false);postaviLoginVidljivost(false);postaviPocetnaVidljivost(true)}}>Back</Button>\r\n          <RegistracijaForma\r\n      username={username}\r\n      pass={pass}\r\n      pass1={pass1}\r\n      ime={ime}\r\n      prezime={prezime}\r\n      spol={spol}\r\n      mob={mob}\r\n      options={options}\r\n      promjenaKorImena={({ target }) => postaviUsername(target.value)}\r\n      promjenaLozinke={({ target }) => postaviPass(target.value)}\r\n      promjenaLozinke1={({target})=>postaviPass1(target.value)}\r\n      promjenaImena={({ target }) => postaviIme(target.value)}\r\n      promjenaPrezimena={({ target }) => postaviPrezime(target.value)}\r\n      promjenaSpola={({ target }) => postaviSpol(target.value)}\r\n      promjenaMoba={({ target }) => postaviMob(target.value)}\r\n      userRegistration={userRegistration}\r\n    />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    const editDiv={\r\n      marginLeft:'250px'\r\n    }\r\n    const editForma=()=>{\r\n      const sakrij = { display: editVidljiv? 'none' : '' }\r\n      const prikazi = { display: editVidljiv ? '' : 'none' }\r\n      return (\r\n        <div style={editDiv}>\r\n          <div style={sakrij}>\r\n             <Button variant=\"contained\" color=\"secondary\" startIcon={<EditOutlinedIcon />} onClick={() => postaviEditVidljivost(true)}>Edit</Button> \r\n          </div>\r\n          <div style={prikazi}> \r\n          <EditForma\r\n      username={korisnik.username}\r\n      spol={spol}\r\n      options={options}\r\n      promjenaLozinke={({ target }) => postaviPass(target.value)}\r\n      promjenaLozinke1={({target})=>postaviPass1(target.value)}\r\n      promjenaImena={({ target }) => postaviIme(target.value)}\r\n      promjenaPrezimena={({ target }) => postaviPrezime(target.value)}\r\n      promjenaSpola={({ target }) => postaviSpol(target.value)}\r\n      promjenaMoba={({ target }) => postaviMob(target.value)}\r\n      userEdit={userEdit}\r\n      promjenaEditVidljivosti={(target)=>postaviEditVidljivost(target.value)}\r\n    />\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    }\r\n\r\n    const profilForma=()=>{\r\n      const sakrij = { display: profilVidljiv? 'none' : '' }\r\n      const prikazi = { display: profilVidljiv ? '' : 'none' }\r\n      return (\r\n        <div>\r\n          <div style={sakrij}>\r\n          </div>\r\n          <div style={prikazi}> \r\n          <Button  startIcon={<ArrowBackIcon/>}  style ={natrag} variant=\"outlined\" color=\"secondary\"  onClick={() => {postaviProfilVidljiv(false)}}>Back</Button>\r\n       <br></br>\r\n          <div style={divProfil}>     \r\n          <div>\r\n          <h3 style={h3naslovi}>About you <i>{korisnik.ime}</i></h3>\r\n          <ProfilForma\r\n      username={korisnik.username}\r\n      pass={pass}\r\n      ime={korisnik.ime}\r\n      prezime={korisnik.prezime}\r\n      spol={korisnik.spol}\r\n      mob={korisnik.mob}\r\n    />\r\n      </div>\r\n      <img src=\"unnamed.png\" width='300' height='250'></img>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    const adminForma=()=>{\r\n      const Ispis=rezervacije.filter(rezervacija=>Date.parse(rezervacija.datum)>=Date.parse(today))\r\n      return(\r\n      <div>\r\n        <br></br>\r\n        <h2 style={h3naslovi}>Upcoming reservations</h2>\r\n        <ul>\r\n        {Ispis.sort(function(a,b){return Date.parse(a.datum)>Date.parse(b.datum)?1:-1}).map(r =>\r\n          <RezervacijaKor key={r.id} rezervacija={r} brisiRezervaciju={()=>brisiRezervaciju(r.id)}/>\r\n          )} \r\n      </ul>\r\n      </div>)\r\n    }\r\n   \r\n    const RezervacijaForma = () => (\r\n      <div>\r\n        \r\n         <Button style={btnProfile} variant=\"contained\" color=\"secondary\" startIcon={<PersonIcon />} onClick={() => {postaviProfilVidljiv(true);}}>My profile</Button>\r\n      <div style={container}>\r\n        <div>\r\n          <div style={sredina}>\r\n          <h2 style={h3naslovi}>About us :)</h2>\r\n          <p>Working hours:</p>\r\n          <p>Every day <b>07:00 am - 12:00 am</b></p>\r\n          <p style={h3naslovi}><b>Hurry up and make an reservation!</b></p>\r\n          </div>\r\n        </div>\r\n      <div style={div1}>\r\n      <form onSubmit={novaRezervacija}>\r\n        <h3 style={h3naslovi}>New reservation</h3>\r\n      <DateCalendar value={odabirDatuma}  funk={(odabir) => odabraniDat(odabir)}/>\r\n       {/* //onChange={promjenaDatuma} */}\r\n      <Dropdown options={optionsTermin} value={odabirPocetka} onChange={promjenaPocetka} /><br></br><br></br>\r\n      <label>Tretman:</label>\r\n      <Tretman value={odabirTretmana} prjenos={odabirTretmana} onChange={promjenaTretmana} funkcija={(odab)=>odabraniTretman(odab)}></Tretman><br></br><br></br>\r\n        <Button variant=\"contained\" color=\"secondary\" startIcon={<AddBoxIcon />} type='submit'>Save</Button>\r\n      </form>\r\n      </div>\r\n      <div style={div2}>\r\n         <h3 style={h3naslovi}>My reservations</h3>\r\n         <ul>\r\n        {rezervacijeZaIspis.sort(function(a,b){return Date.parse(a.datum)>Date.parse(b.datum)?1:-1}).map(r => <Rezervacija key={r.id} rezervacija={r} brisiRezervaciju={()=>brisiRezervaciju(r.id)}/>)}\r\n      </ul>\r\n      </div>\r\n      </div>\r\n      </div>      \r\n    )\r\n    return (\r\n      <div>\r\n      \t\r\n{korisnik === null \r\n  ?  pocetnaVidljiva===true? pocetnaForma(): loginVidljiv===true?loginForma():registracijaForma()\r\n  : <div>\r\n     <div>\r\n      {(info &&\r\n      <Alert severity=\"success\">\r\n           {info}\r\n      </Alert> )}\r\n      </div>\r\n       <br></br>\r\n       <h1 style={naslov3}>Beauty - reservations</h1>\r\n       <Button variant=\"outlined\" color=\"secondary\"  startIcon={<ExitToAppOutlinedIcon />} style={odjavaStil} onClick={() => {window.localStorage.clear(); postaviKorisnika(null); postaviPocetnaVidljivost(true); postaviLoginVidljivost(false);postaviProfilVidljiv(false); postaviPass('')}}>Sign out</Button>\r\n       {korisnik.username==\"adragicevic\"?  adminForma():profilVidljiv===true?profilForma() : RezervacijaForma()}\r\n       {profilVidljiv===true?editForma():'' }\r\n    </div>\r\n}\r\n</div>\r\n    )\r\n  }\r\n\r\n  export default App","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\Rezervacija.js",["84","85","86","87","88","89","90","91","92"],"import React from 'react'\r\nimport moment, { parseTwoDigitYear } from 'moment'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Container,Button, Table, TableBody, TableCell, TableContainer, TableRow, Paper} from '@material-ui/core'\r\n\r\nconst razmak={\r\n    margin:'5px'\r\n}\r\n\r\nconst Rezervacija =({rezervacija,brisiRezervaciju})=>{\r\n    return(\r\n        <li className=\"rezervacija\">\r\n            {moment(rezervacija.datum).format('MMMM Do YYYY')+moment().hour(parseInt(rezervacija.pocetak)).minutes(0).format(' hh:mm')+\" - \"+moment().hour(parseInt(rezervacija.kraj)).minutes(0).format(' hh:mm')+\" - \"+rezervacija.tretman+\"  \"}\r\n           <Button variant=\"contained\" color=\"secondary\" style={razmak} className=\"test\"startIcon={<DeleteIcon />} onClick={brisiRezervaciju}>Delete</Button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Rezervacija","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\DateCalendar.js",["93"],"import React, {useState} from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport moment, { parseTwoDigitYear } from 'moment'\r\n\r\n function DateCalendar(props) {\r\n  const [dateState, setDateState] = useState(new Date())\r\n  const changeDate = (e) => {\r\n    setDateState(e)\r\n  }\r\n \r\n\r\nconst today=new Date(moment());\r\nconst maxdate=new Date(moment().add(30,'day'));\r\n\r\nprops.funk((dateState));\r\n\r\n  return (\r\n    <>\r\n      <Calendar \r\n        minDate={today}\r\n        maxDate={maxdate}\r\n       value={dateState}\r\n      onChange={changeDate}\r\n    \r\n      />\r\n       \r\n    <p>Current selected date is <b>{moment(dateState).format('MMMM Do YYYY')}</b></p>\r\n \r\n    </>\r\n  )\r\n}\r\nexport default DateCalendar;","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\Dropdown.js",[],"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\Tretman.js",["94"],"import React, {useState} from 'react'\r\nconst Tretman = (props) => {\r\n\r\n    const [addrtype, setAddrtype] = useState([\"haircut\", \"coloring\", \"highlights\",\"styling\",\"festive hairstyle\",\"balayage\",\"ombre\",\"afro hair style\"])\r\n    const Add = addrtype.map(Add => Add\r\n    )\r\n    const handleAddrTypeChange = (e) => props.funkcija((addrtype[e.target.value]))\r\n    \r\n    return (\r\n      <select\r\n        onChange={e => handleAddrTypeChange(e)}\r\n        className=\"browser-default custom-select\" >\r\n        {\r\n          Add.map((address, key) => <option value={key} key={key}>{address}</option>)\r\n        }\r\n      </select >)\r\n  \r\n  }\r\n  export default Tretman","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\LoginForma.js",[],"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\RegistracijaForma.js",[],"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\services\\korisnici.js",["95"],"import axios from 'axios'\r\nconst osnovniUrl = 'http://localhost:5000/api/korisnici'\r\n \r\nconst dohvatiSve = () => {\r\n    return axios.get(osnovniUrl);\r\n}\r\n \r\nconst stvori = noviObjekt => {\r\n    return axios.post(osnovniUrl, noviObjekt)         \r\n}\r\n \r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\nconst brisi=id=>{\r\n    return axios.delete(`${osnovniUrl}/${id}`)\r\n}\r\n \r\nexport default {\r\n    dohvatiSve: dohvatiSve,\r\n    stvori: stvori,\r\n    osvjezi: osvjezi,\r\n    brisi:brisi\r\n}","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\services\\rezervacije.js",["96"],"import axios from 'axios'\r\nconst osnovniUrl = 'http://localhost:5000/api/rezervacije'\r\nlet token = null\r\nconst postaviToken = noviToken => {\r\n    token = `bearer ${noviToken}`\r\n}\r\n \r\nconst dohvatiSve = () => {\r\n    return axios.get(osnovniUrl);\r\n}\r\nconst stvori = async noviObjekt => {\r\n    const config={\r\n        headers: {Authorization: token}\r\n    }\r\n    const odgovor=await axios.post(osnovniUrl,noviObjekt,config)\r\n    return odgovor\r\n}\r\n \r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\nconst brisi=id=>{\r\n    return axios.delete(`${osnovniUrl}/${id}`)\r\n}\r\n \r\nexport default {\r\n    dohvatiSve: dohvatiSve,\r\n    stvori: stvori,\r\n    osvjezi: osvjezi,\r\n    brisi:brisi,\r\n    postaviToken:postaviToken\r\n}","C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\services\\login.js",["97"],"import axios from 'axios'\r\nconst osnovniUrl = 'http://localhost:5000/api/login'\r\n \r\nconst prijava = async podaci => {\r\n  const odgovor = await axios.post(osnovniUrl, podaci)\r\n  return odgovor.data\r\n}\r\n \r\nexport default {prijava}",["98","99"],"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\ProfilForma.js",[],"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\EditForma.js",[],"C:\\Users\\Administrator\\Desktop\\Projekt_okviri\\projekt-adragicevic98\\frontend\\src\\components\\RezervacijaKor.js",["100"],"import React from 'react'\r\nimport moment, { parseTwoDigitYear } from 'moment'\r\n\r\nconst RezervacijaKor =({rezervacija,brisiRezervaciju})=>{\r\n    return(\r\n        <li className=\"rezervacija\">\r\n            {moment(rezervacija.datum).format('MMMM Do YYYY')+moment().hour(parseInt(rezervacija.pocetak)).minutes(0).format(' hh:mm')+\" - \"+\r\n            moment().hour(parseInt(rezervacija.kraj)).minutes(0).format(' hh:mm')+\" - \"+rezervacija.tretman+\" - \"+rezervacija.korisnik.ime+\" \"+rezervacija.korisnik.prezime+\" -> Mob: \"+rezervacija.korisnik.mob}\r\n        </li>\r\n    )\r\n}\r\nexport default RezervacijaKor",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":76,"column":14,"nodeType":"107","messageId":"108","endLine":76,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":111,"column":13,"nodeType":"107","messageId":"108","endLine":111,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":165,"column":74,"nodeType":"111","messageId":"112","endLine":165,"endColumn":76},{"ruleId":"105","severity":1,"message":"106","line":165,"column":106,"nodeType":"107","messageId":"108","endLine":165,"endColumn":108},{"ruleId":"109","severity":1,"message":"110","line":165,"column":126,"nodeType":"111","messageId":"112","endLine":165,"endColumn":128},{"ruleId":"113","severity":1,"message":"114","line":220,"column":9,"nodeType":"115","messageId":"116","endLine":220,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":231,"column":5,"nodeType":"119","messageId":"120","endLine":252,"endColumn":7},{"ruleId":"105","severity":1,"message":"106","line":234,"column":37,"nodeType":"107","messageId":"108","endLine":234,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":236,"column":41,"nodeType":"107","messageId":"108","endLine":236,"endColumn":43},{"ruleId":"105","severity":1,"message":"121","line":237,"column":70,"nodeType":"107","messageId":"108","endLine":237,"endColumn":72},{"ruleId":"105","severity":1,"message":"106","line":247,"column":51,"nodeType":"107","messageId":"108","endLine":247,"endColumn":53},{"ruleId":"122","severity":1,"message":"123","line":345,"column":5,"nodeType":"124","endLine":345,"endColumn":57},{"ruleId":"122","severity":1,"message":"123","line":462,"column":7,"nodeType":"124","endLine":462,"endColumn":55},{"ruleId":"105","severity":1,"message":"106","line":530,"column":26,"nodeType":"107","messageId":"108","endLine":530,"endColumn":28},{"ruleId":"113","severity":1,"message":"125","line":2,"column":18,"nodeType":"115","messageId":"116","endLine":2,"endColumn":35},{"ruleId":"113","severity":1,"message":"126","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":20},{"ruleId":"113","severity":1,"message":"127","line":5,"column":9,"nodeType":"115","messageId":"116","endLine":5,"endColumn":18},{"ruleId":"113","severity":1,"message":"128","line":5,"column":27,"nodeType":"115","messageId":"116","endLine":5,"endColumn":32},{"ruleId":"113","severity":1,"message":"129","line":5,"column":34,"nodeType":"115","messageId":"116","endLine":5,"endColumn":43},{"ruleId":"113","severity":1,"message":"130","line":5,"column":45,"nodeType":"115","messageId":"116","endLine":5,"endColumn":54},{"ruleId":"113","severity":1,"message":"131","line":5,"column":56,"nodeType":"115","messageId":"116","endLine":5,"endColumn":70},{"ruleId":"113","severity":1,"message":"132","line":5,"column":72,"nodeType":"115","messageId":"116","endLine":5,"endColumn":80},{"ruleId":"113","severity":1,"message":"133","line":5,"column":82,"nodeType":"115","messageId":"116","endLine":5,"endColumn":87},{"ruleId":"113","severity":1,"message":"125","line":4,"column":18,"nodeType":"115","messageId":"116","endLine":4,"endColumn":35},{"ruleId":"113","severity":1,"message":"134","line":4,"column":22,"nodeType":"115","messageId":"116","endLine":4,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":19,"column":1,"nodeType":"137","endLine":24,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":26,"column":1,"nodeType":"137","endLine":32,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":9,"column":1,"nodeType":"137","endLine":9,"endColumn":25},{"ruleId":"101","replacedBy":"138"},{"ruleId":"103","replacedBy":"139"},{"ruleId":"113","severity":1,"message":"125","line":2,"column":18,"nodeType":"115","messageId":"116","endLine":2,"endColumn":35},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'promjenaDatuma' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'parseTwoDigitYear' is defined but never used.","'makeStyles' is defined but never used.","'Container' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'setAddrtype' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["140"],["141"],"no-global-assign","no-unsafe-negation"]